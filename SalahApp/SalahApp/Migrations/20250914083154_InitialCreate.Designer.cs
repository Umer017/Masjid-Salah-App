// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalahApp.Data;

#nullable disable

namespace SalahApp.Migrations
{
    [DbContext(typeof(SalahAppDbContext))]
    [Migration("20250914083154_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalahApp.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Admin");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdminId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            AdminId = 1,
                            Email = "admin@salahapp.com",
                            PasswordHash = "$2a$11$w05Z2qBFypLTxxz6STQhgOEAzJsdfp1ASY4BktF3bI3jJed1Yusk2",
                            Role = "SuperAdmin",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("SalahApp.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.HasIndex("CityName", "StateId")
                        .IsUnique();

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Hyderabad",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Visakhapatnam",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Vijayawada",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Warangal",
                            StateId = 2
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Nizamabad",
                            StateId = 2
                        },
                        new
                        {
                            CityId = 6,
                            CityName = "Bangalore",
                            StateId = 3
                        },
                        new
                        {
                            CityId = 7,
                            CityName = "Mysore",
                            StateId = 3
                        },
                        new
                        {
                            CityId = 8,
                            CityName = "Mangalore",
                            StateId = 3
                        },
                        new
                        {
                            CityId = 9,
                            CityName = "Chennai",
                            StateId = 4
                        },
                        new
                        {
                            CityId = 10,
                            CityName = "Coimbatore",
                            StateId = 4
                        },
                        new
                        {
                            CityId = 11,
                            CityName = "Madurai",
                            StateId = 4
                        },
                        new
                        {
                            CityId = 12,
                            CityName = "Kochi",
                            StateId = 5
                        },
                        new
                        {
                            CityId = 13,
                            CityName = "Thiruvananthapuram",
                            StateId = 5
                        },
                        new
                        {
                            CityId = 14,
                            CityName = "Kozhikode",
                            StateId = 5
                        },
                        new
                        {
                            CityId = 15,
                            CityName = "Mumbai",
                            StateId = 6
                        },
                        new
                        {
                            CityId = 16,
                            CityName = "Pune",
                            StateId = 6
                        },
                        new
                        {
                            CityId = 17,
                            CityName = "Nagpur",
                            StateId = 6
                        },
                        new
                        {
                            CityId = 18,
                            CityName = "New Delhi",
                            StateId = 14
                        },
                        new
                        {
                            CityId = 19,
                            CityName = "Lucknow",
                            StateId = 9
                        },
                        new
                        {
                            CityId = 20,
                            CityName = "Kanpur",
                            StateId = 9
                        },
                        new
                        {
                            CityId = 21,
                            CityName = "Agra",
                            StateId = 9
                        });
                });

            modelBuilder.Entity("SalahApp.Models.DailyAdditionalTimings", b =>
                {
                    b.Property<int>("AdditionalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdditionalId"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("IftarTime")
                        .HasColumnType("time");

                    b.Property<int>("MasjidId")
                        .HasColumnType("int");

                    b.Property<TimeOnly?>("SehriEndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("SunriseTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("SunsetTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("TahajjudTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("ZawalTime")
                        .HasColumnType("time");

                    b.HasKey("AdditionalId");

                    b.HasIndex("MasjidId", "Date")
                        .IsUnique();

                    b.ToTable("DailyAdditionalTimings");
                });

            modelBuilder.Entity("SalahApp.Models.Masjid", b =>
                {
                    b.Property<int>("MasjidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasjidId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ImamName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(10, 8)
                        .HasColumnType("decimal(10,8)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("decimal(11,8)");

                    b.Property<string>("MasjidName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("MasjidId");

                    b.HasIndex("CityId");

                    b.HasIndex("MasjidName", "CityId")
                        .IsUnique();

                    b.ToTable("Masjids");
                });

            modelBuilder.Entity("SalahApp.Models.SalahTiming", b =>
                {
                    b.Property<int>("SalahId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalahId"));

                    b.Property<TimeOnly?>("AsrAzanTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("AsrIqamahTime")
                        .HasColumnType("time");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<TimeOnly?>("DhuhrAzanTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("DhuhrIqamahTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("FajrAzanTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("FajrIqamahTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("IshaAzanTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("IshaIqamahTime")
                        .HasColumnType("time");

                    b.Property<string>("IslamicDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeOnly?>("JummahAzanTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("JummahIqamahTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("MaghribAzanTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly?>("MaghribIqamahTime")
                        .HasColumnType("time");

                    b.Property<int>("MasjidId")
                        .HasColumnType("int");

                    b.HasKey("SalahId");

                    b.HasIndex("MasjidId", "Date")
                        .IsUnique();

                    b.ToTable("SalahTimings");
                });

            modelBuilder.Entity("SalahApp.Models.SpecialEvents", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateOnly>("EventDate")
                        .HasColumnType("date");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<TimeOnly?>("EventTime")
                        .HasColumnType("time");

                    b.Property<int>("MasjidId")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("MasjidId");

                    b.ToTable("SpecialEvents");
                });

            modelBuilder.Entity("SalahApp.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int?>("AdminId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StateId");

                    b.HasIndex("AdminId");

                    b.HasIndex("StateName")
                        .IsUnique();

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            StateName = "Andhra Pradesh"
                        },
                        new
                        {
                            StateId = 2,
                            StateName = "Telangana"
                        },
                        new
                        {
                            StateId = 3,
                            StateName = "Karnataka"
                        },
                        new
                        {
                            StateId = 4,
                            StateName = "Tamil Nadu"
                        },
                        new
                        {
                            StateId = 5,
                            StateName = "Kerala"
                        },
                        new
                        {
                            StateId = 6,
                            StateName = "Maharashtra"
                        },
                        new
                        {
                            StateId = 7,
                            StateName = "Gujarat"
                        },
                        new
                        {
                            StateId = 8,
                            StateName = "Rajasthan"
                        },
                        new
                        {
                            StateId = 9,
                            StateName = "Uttar Pradesh"
                        },
                        new
                        {
                            StateId = 10,
                            StateName = "Bihar"
                        },
                        new
                        {
                            StateId = 11,
                            StateName = "West Bengal"
                        },
                        new
                        {
                            StateId = 12,
                            StateName = "Odisha"
                        },
                        new
                        {
                            StateId = 13,
                            StateName = "Madhya Pradesh"
                        },
                        new
                        {
                            StateId = 14,
                            StateName = "Delhi"
                        },
                        new
                        {
                            StateId = 15,
                            StateName = "Punjab"
                        },
                        new
                        {
                            StateId = 16,
                            StateName = "Haryana"
                        },
                        new
                        {
                            StateId = 17,
                            StateName = "Himachal Pradesh"
                        },
                        new
                        {
                            StateId = 18,
                            StateName = "Uttarakhand"
                        },
                        new
                        {
                            StateId = 19,
                            StateName = "Jammu and Kashmir"
                        },
                        new
                        {
                            StateId = 20,
                            StateName = "Assam"
                        });
                });

            modelBuilder.Entity("SalahApp.Models.City", b =>
                {
                    b.HasOne("SalahApp.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("SalahApp.Models.DailyAdditionalTimings", b =>
                {
                    b.HasOne("SalahApp.Models.Masjid", "Masjid")
                        .WithMany("DailyAdditionalTimings")
                        .HasForeignKey("MasjidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masjid");
                });

            modelBuilder.Entity("SalahApp.Models.Masjid", b =>
                {
                    b.HasOne("SalahApp.Models.City", "City")
                        .WithMany("Masjids")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("SalahApp.Models.SalahTiming", b =>
                {
                    b.HasOne("SalahApp.Models.Masjid", "Masjid")
                        .WithMany("SalahTimings")
                        .HasForeignKey("MasjidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masjid");
                });

            modelBuilder.Entity("SalahApp.Models.SpecialEvents", b =>
                {
                    b.HasOne("SalahApp.Models.Masjid", "Masjid")
                        .WithMany("SpecialEvents")
                        .HasForeignKey("MasjidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Masjid");
                });

            modelBuilder.Entity("SalahApp.Models.State", b =>
                {
                    b.HasOne("SalahApp.Models.Admin", null)
                        .WithMany("States")
                        .HasForeignKey("AdminId");
                });

            modelBuilder.Entity("SalahApp.Models.Admin", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("SalahApp.Models.City", b =>
                {
                    b.Navigation("Masjids");
                });

            modelBuilder.Entity("SalahApp.Models.Masjid", b =>
                {
                    b.Navigation("DailyAdditionalTimings");

                    b.Navigation("SalahTimings");

                    b.Navigation("SpecialEvents");
                });

            modelBuilder.Entity("SalahApp.Models.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
